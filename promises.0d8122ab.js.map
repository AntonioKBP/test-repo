{"mappings":"AAsFA,IAAMA,QAAU,SAACC,EAAOC,G,OACtB,IAAIC,SAAQ,SAAAC,GACVC,YAAW,WACTD,EAAQF,E,GACPD,E,KAKDK,YAAcH,QAAQI,IAAI,CAC9BP,QAAQ,IAAM,CAAEQ,IAAK,mBACrBR,QAAQ,KAAM,CAAEQ,IAAK,qBACrBR,QAAQ,IAAM,CAAEQ,IAAK,kBACrBR,QAAQ,IAAM,CAAEQ,IAAK,qBAGvBF,YAAYG,MAAK,SAAAC,G,OAAOC,QAAQC,IAAIF,E,IAEpC,IAAMG,aAAeV,QAAQW,KAAK,CAChCd,QAAQ,IAAM,CAAEQ,IAAK,mBACrBR,QAAQ,KAAM,CAAEQ,IAAK,qBACrBR,QAAQ,IAAM,CAAEQ,IAAK,kBACrBR,QAAQ,IAAM,CAAEQ,IAAK,qBAGvBK,aAAaJ,MAAK,SAAAC,G,OAAOC,QAAQC,IAAIF,E","sources":["src/js/promises.js"],"sourcesContent":["// const promise = new Promise(resolve => {\n//   resolve(10);\n// });\n\n// promise\n//   .then(value => {\n//     return new Promise(resolve => {\n//       resolve(value * 2);\n//     });\n//   })\n//   .then(value => console.log(value));\n\n// ==========================================================================\n\n// const ourPromise = new Promise((resolve, reject) => {\n//   let number = Math.random() > 0.5;\n//   if (number) {\n//     resolve('I am done');\n//   } else {\n//     reject('I am failed');\n//   }\n// })\n//   .then(data => console.log('Data from resolved promise', data))\n//   .catch(error => console.log('I am error', error))\n//   .finally(() => console.log('I am complete anyway'));\n\n// console.log('Our promise -> ', ourPromise);\n\n// ===========================================================================\n\n// refs = {\n//   div1: document.querySelector('container'),\n//   div2: document.querySelector('containerFinally'),\n// };\n// let cake;\n// const birthday = new Promise((resolve, reject) => {\n//   const number = Math.random() > 0.5;\n//   setTimeout(() => {\n//     if (number) {\n//       cake = 'Cake is completed 🎂';\n//       resolve(cake);\n//     } else {\n//       cake = 'Cake is Lost 🤨';\n//       reject(cake);\n//     }\n//   }, 1000);\n// });\n\n// birthday\n//   .then(data => (refs.div1.innerHTML = `Celebrating with Cake 🎂✅ + ${data}`))\n\n//   .catch(error => (refs.div1.innerHTML = `Without Cake 🎂❌ + ${error}`))\n//   .finally(() => (refs.div2.innerHTML = 'We celebrate the birthday party💝'));\n\n// ====================================================\n\n// const sleep = ms => {\n//   return new Promise((resolve, reject) => {\n//     setTimeout(() => resolve('123'), ms);\n//   });\n// };\n\n// Promise.all([sleep(1500), sleep(2000), sleep(2500), sleep(1000)]).then(data =>\n//   console.log('All --> finished', data)\n// );\n// Promise.race([sleep(1500), sleep(2000), sleep(2500), sleep(1000)]).then(data =>\n//   console.log('Race --> finished')\n// );\n\n// ============================================================\n\n// const promise = new Promise((resolve, reject) => {\n//   resolve({ key: 'value' });\n//   //   reject({ key: 'failure' });\n// });\n// // console.log(promise);\n// promise\n//   .then(response => {\n//     console.log('then 1 -->', response);\n//     return Object.keys(response);\n//   })\n//   .then(response => console.log('then 2 -->', response))\n//   .catch(error => console.log(error));\n\n// ============================================================\n\nconst timeout = (delay, data) =>\n  new Promise(resolve => {\n    setTimeout(() => {\n      resolve(data);\n    }, delay);\n  });\n\n// timeout(2000, { key: 'Hello Promise' }).then(res => console.log(res));\n\nconst timeOutsAll = Promise.all([\n  timeout(2000, { key: 'I am 2 seconds' }),\n  timeout(1500, { key: 'I am 1.5 seconds' }),\n  timeout(1000, { key: 'I am 1 second' }),\n  timeout(3000, { key: 'I am 3 seconds' }),\n]);\n\ntimeOutsAll.then(res => console.log(res));\n\nconst timeOutsRace = Promise.race([\n  timeout(2000, { key: 'I am 2 seconds' }),\n  timeout(1500, { key: 'I am 1.5 seconds' }),\n  timeout(1000, { key: 'I am 1 second' }),\n  timeout(3000, { key: 'I am 3 seconds' }),\n]);\n\ntimeOutsRace.then(res => console.log(res));\n"],"names":["timeout","delay","data","Promise","resolve","setTimeout","timeOutsAll","all","key","then","res","console","log","timeOutsRace","race"],"version":3,"file":"promises.0d8122ab.js.map"}